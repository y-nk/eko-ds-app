{"version":3,"sources":["contexts/graph.js","components/common/title/index.js","components/common/dial/index.js","components/common/group/index.js","components/common/cross/index.js","components/common/graph/index.js","components/common/node/index.js","hooks/useMouse.js","components/move/node.js","components/common/edge/index.js","components/move/edge.js","components/move/graph.js","components/common/input/index.js","components/common/delete/index.js","components/edit/node.js","components/edit/edge.js","components/edit/graph.js","components/plan/node.js","components/plan/edge.js","components/plan/graph.js","components/common/report/index.js","app/index.js","index.js"],"names":["GraphContext","createContext","graph","nodes","edges","GraphProvider","children","useState","setNodes","setEdges","steps","setSteps","link","from","to","cost","core","unlink","api","add","nodeid","data","id","Date","now","toString","name","del","index","indexOf","slice","move","x","y","rename","valuate","step","node","length","err","console","warn","Provider","value","Title","className","defaultProps","ACTIONS","icon","PanToolIcon","edit","CreateIcon","plan","NavigationIcon","Dial","mode","setMode","open","setOpen","Icon","SpeedDial","ariaLabel","direction","htmlColor","onOpen","onClose","Object","entries","map","routeName","action","SpeedDialAction","key","tooltipTitle","onClick","Group","props","overflow","x1","y1","x2","y2","Graph","onMouseUp","width","height","Node","setXY","autoRelease","dragging","setDragging","useEffect","mousemove","e","clientX","window","innerWidth","clientY","innerHeight","mouseup","addEventListener","removeEventListener","MoveNode","useContext","useMouse","mouse","cx","onMouseDown","Edge","selected","indexesOf","angle","Math","atan2","PI","transform","points","MoveEdge","dx","dy","edge","values","Input","onChange","draft","setDraft","setEdit","input","createRef","confirm","useCallback","current","focus","ref","type","readOnly","target","onKeyUp","stopImmediatePropagation","cancel","DeleteButton","stopPropagation","EditNode","active","hx","hy","setHook","cos","sin","onMouseEnter","onMouseLeave","val","style","EditEdge","hasCost","isNaN","pattern","newCost","parseFloat","anchor","setAnchor","setMouse","startEdge","endEdge","PlanNode","PlanEdge","highlight","directions","edgesOf","includes","find","push","route","routeFor","costOf","visible","routes","source","createHashSource","history","createHistory","path","location","hash","newMode","navigate","default","noThrow","ReactDOM","render","document","getElementById"],"mappings":"2cAIaA,EAAeC,wBAAc,MAE7BC,EAAQ,CACnBC,MAAO,GACPC,MAAO,IAiGMC,EA9FO,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,mBAASL,EAAMC,OADH,mBAC/BA,EAD+B,KACxBK,EADwB,OAEZD,mBAASL,EAAME,OAFH,mBAE/BA,EAF+B,KAExBK,EAFwB,OAGZF,mBAAS,IAHG,mBAG/BG,EAH+B,KAGxBC,EAHwB,KAuBhCC,EAAO,SAACC,EAAMC,EAAIC,GACtBC,OAAUd,EAAOW,EAAMC,EAAIC,GAC3BN,EAAS,YAAIP,EAAME,SAGfa,EAAS,SAACJ,EAAMC,GACpBE,SAAYd,EAAOW,EAAMC,GACzBL,EAAS,YAAIP,EAAME,SAqCfc,EAAM,CACVf,QACAgB,IA/DU,SAACC,EAAQC,GACnB,IAAMC,EAAgB,OAAXF,EACPA,EACAG,KAAKC,MAAMC,SAAS,IAExBT,MAASd,EAAOoB,EAAhB,aAAsBA,KAAII,KAAMJ,GAAOD,IACvCb,EAAS,eAAKN,EAAMC,SA0DpBwB,IAvDU,SAACL,GACXN,MAASd,EAAOoB,GAChBd,EAAS,eAAKN,EAAMC,QAEpB,IAAMyB,EAAQlB,EAAMmB,QAAQP,IACb,IAAXM,GAAcjB,EAASD,EAAMoB,MAAM,EAAGF,KAmD1CG,KAtCW,SAACT,EAAIU,EAAGC,GACnB/B,EAAMC,MAAMmB,GAAZ,eAAuBpB,EAAMC,MAAMmB,GAAnC,CAAwCU,IAAGC,MAC3CzB,EAAS,eAAKN,EAAMC,SAqCpB+B,OAlCa,SAACZ,EAAII,GAClBxB,EAAMC,MAAMmB,GAAZ,eAAuBpB,EAAMC,MAAMmB,GAAnC,CAAwCI,SACxClB,EAAS,eAAKN,EAAMC,SAiCpBC,QACAQ,OACAK,SACAkB,QAjCc,SAACtB,EAAMC,EAAIC,GACzBE,EAAOJ,EAAMC,GACbF,EAAKC,EAAMC,EAAIC,IAgCfL,QACA0B,KA5BW,SAACC,GACZ,GAAa,OAATA,EAKJ,GAAK3B,EAAM4B,OAET,IACEtB,UAAad,EAAOQ,EAAMA,EAAM4B,OAAS,GAAID,GAC7C1B,EAAS,GAAD,mBAAKD,GAAL,CAAY2B,KACpB,MAAOE,GAAOC,QAAQC,KAAK,uBALZ9B,EAAS,CAAC0B,SAJ3B1B,EAAS,MA+Bb,OACE,kBAACX,EAAa0C,SAAd,CAAuBC,MAAOzB,GAC1BZ,I,iCC5FFsC,G,MAAQ,SAAC,GAAD,IAAGtC,EAAH,EAAGA,SAAH,OACZ,wBAAIuC,UAAU,SAAUvC,KAO1BsC,EAAME,aAAe,CACnBxC,SAAU,IAGGsC,Q,6ECJTG,EAAU,CACdhB,KAAM,CACJiB,KAAMC,IACNvB,KAAM,sBAGRwB,KAAM,CACJF,KAAMG,IACNzB,KAAM,gBAGR0B,KAAM,CACJJ,KAAMK,IACN3B,KAAM,iBAyCK4B,EArCF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAAc,EACVjD,oBAAS,GADC,mBAC3BkD,EAD2B,KACrBC,EADqB,KAG5BC,EAAOZ,EAAQQ,GAAMP,KAO3B,OACE,kBAACY,EAAA,EAAD,CACEf,UAAU,OACVgB,UAAU,YACVC,UAAU,KACVd,KAAM,kBAACW,EAAD,CAAMI,UAAU,SACtBN,KAAMA,EACNO,OAAQ,kBAAMN,GAAQ,IACtBO,QAAS,kBAAMP,GAAQ,KAErBQ,OAAOC,QAAQpB,GAASqB,KAAI,mCAAEC,EAAF,KAAaC,EAAb,YAC5B,kBAACC,EAAA,EAAD,CACEC,IAAKF,EAAO5C,KACZsB,KAAM,kBAACsB,EAAOtB,KAAR,CAAae,UAAS,gBAAWM,EAAX,OAC5BI,aAAcH,EAAO5C,KACrBgD,QAAS,kBAnBflB,EAmB8Ba,QAlB9BX,GAAQ,W,gBCjCNiB,EAAQ,SAAC,GAAD,IAAGrE,EAAH,EAAGA,SAAasE,EAAhB,mCAEZ,uCAAKC,SAAS,WAAcD,GACxBtE,KAQNqE,EAAM7B,aAAe,CACnBxC,SAAU,IAGGqE,QCfA,G,MAAA,kBACb,uBAAG9B,UAAU,SACX,0BAAMiC,GAAG,IAAIC,GAAG,KAAKC,GAAG,IAAIC,GAAG,MAC/B,0BAAMH,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAIC,GAAG,SCC7BC,EAAQ,SAAC,GAAD,IAAG5E,EAAH,EAAGA,SAAUoE,EAAb,EAAaA,QAASS,EAAtB,EAAsBA,UAAtB,OACZ,yBAAKtC,UAAU,SACb,0BAAMb,EAAE,IAAIC,EAAE,IAAImD,MAAM,OAAOC,OAAO,OAAOX,QAASA,EAASS,UAAWA,IAE1E,kBAAC,EAAD,CAAOnD,EAAE,MAAMC,EAAE,OACf,kBAAC,EAAD,MACE3B,KAWR4E,EAAMpC,aAAe,CACnBxC,SAAU,GACVoE,QAAS,KACTS,UAAW,MAGED,Q,gBCxBTI,G,MAAO,SAAC,GAAD,IACXzC,EADW,EACXA,UAAWb,EADA,EACAA,EAAGC,EADH,EACGA,EAAG3B,EADN,EACMA,SADN,OAGX,kBAAC,EAAD,CACEuC,UAAWA,EACXb,EAAGA,EACHC,EAAGA,GAEH,uCACI3B,MAYRgF,EAAKxC,aAAe,CAClBD,UAAW,GACXb,EAAG,EACHC,EAAG,EACH3B,SAAU,IAGGgF,QChCA,WAACC,GAA+B,IAAxBC,IAAuB,2DACZjF,oBAAS,GADG,mBACrCkF,EADqC,KAC3BC,EAD2B,KA2B5C,OAxBAC,qBAAU,WACR,IAAMC,EAAY,SAACC,GAAD,OAAON,EAAM,CAC7BvD,EAAG6D,EAAEC,QAA8B,GAApBC,OAAOC,WACtB/D,EAAG4D,EAAEI,QAA+B,GAArBF,OAAOG,eAGlBC,EAAU,WACVX,GAAaE,GAAY,IAW/B,OARID,GACFM,OAAOK,iBAAiB,YAAaR,GACrCG,OAAOK,iBAAiB,UAAWD,KAEnCJ,OAAOM,oBAAoB,YAAaT,GACxCG,OAAOM,oBAAoB,UAAWF,IAGjC,WACLJ,OAAOM,oBAAoB,YAAaT,GACxCG,OAAOM,oBAAoB,UAAWF,MAEvC,CAACX,EAAaC,EAAUF,IAEpB,CAAEE,WAAUC,gBCpBfY,EAAW,SAAC,GAEX,IADLhF,EACI,EADJA,GAAIU,EACA,EADAA,EAAGC,EACH,EADGA,EAAGP,EACN,EADMA,KAEFK,EAASwE,qBAAWvG,GAApB+B,KADJ,EAI8ByE,GADnB,SAACC,GAAD,OAAW1E,EAAKT,EAAImF,EAAMzE,EAAGyE,EAAMxE,MAC1CwD,EAJJ,EAIIA,SAAUC,EAJd,EAIcA,YAElB,OACE,kBAAC,EAAD,CAAM7C,UAAW6D,IAAG,YAAa,CAAEjB,aAAazD,EAAGA,EAAGC,EAAGA,GACvD,yBAAK0E,YAAa,kBAAMjB,GAAY,KAAShE,KAYnD4E,EAASxD,aAAe,CACtBd,EAAG,EACHC,EAAG,GAGUqE,Q,gBC3BTM,EAAO,SAAC,GAEP,IADL/D,EACI,EADJA,UAAWhC,EACP,EADOA,KAAMC,EACb,EADaA,GAAIR,EACjB,EADiBA,SAEbI,EAAU6F,qBAAWvG,GAArBU,MACFmG,EAAWC,oBAAU,CAACjG,EAAKS,GAAIR,EAAGQ,IAAKZ,GAAO4B,OAAS,EAEvDN,EAAsB,IAAjBnB,EAAKmB,EAAIlB,EAAGkB,GACjBC,EAAsB,IAAjBpB,EAAKoB,EAAInB,EAAGmB,GAEjB8E,EAAQC,KAAKC,MAAMnG,EAAGmB,EAAIpB,EAAKoB,EAAGnB,EAAGkB,EAAInB,EAAKmB,IAAM,IAAMgF,KAAKE,IAErE,OACE,uBAAGrE,UAAW6D,IAAG7D,EAAW,CAAEgE,aAAaM,UAAS,oBAAenF,EAAf,YAAoBC,EAApB,MAClD,0BACE6C,GAAIjE,EAAKmB,EAAIA,EACbgD,GAAIlE,EAAGkB,EAAIA,EACX+C,GAAIlE,EAAKoB,EAAIA,EACbgD,GAAInE,EAAGmB,EAAIA,IAGb,uBAAGkF,UAAS,oBAAerG,EAAGkB,EAAIA,EAAtB,YAA2BlB,EAAGmB,EAAIA,EAAlC,MACV,6BAASmF,OAAO,qBAAqBD,UAAS,iBAAYJ,EAAZ,QAGhD,uCACIzG,KAuBVsG,EAAK9D,aAAe,CAClBD,UAAW,GACXvC,SAAU,IAGGsG,QCrDTS,EAAW,SAAC,GAAwB,IAAtBxG,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACpBgB,EAASwE,qBAAWvG,GAApB+B,KAEFuF,EAAuB,IAAjBxG,EAAGkB,EAAInB,EAAKmB,GAClBuF,EAAuB,IAAjBzG,EAAGmB,EAAIpB,EAAKoB,GAJe,EAWLuE,GALnB,SAAC,GAAc,IAAZxE,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EACnBF,EAAKlB,EAAKS,GAAIU,EAAIsF,EAAIrF,EAAIsF,GAC1BxF,EAAKjB,EAAGQ,GAAIU,EAAIsF,EAAIrF,EAAIsF,MAGlB9B,EAX+B,EAW/BA,SAAUC,EAXqB,EAWrBA,YAElB,OACE,kBAAC,EAAD,CAAM7C,UAAW6D,IAAG,YAAa,CAAEjB,aAAa5E,KAAMA,EAAMC,GAAIA,GAC5DC,EAAO,yBAAK4F,YAAa,kBAAMjB,GAAY,KAAS3E,GAAe,OAqB3EsG,EAASvE,aAAe,CACtB/B,KAAM,GAGOsG,QCzCA,aAAO,IAAD,EACMd,qBAAWvG,GAA5BG,EADW,EACXA,MAAOC,EADI,EACJA,MAEf,OACE,kBAAC,EAAD,KACIA,EAAMgE,KAAI,SAACoD,GAAD,OACV,kBAAC,EAAD,CACEhD,IAAG,UAAKgD,EAAK3G,MAAV,OAAiB2G,EAAK1G,IACzBD,KAAMV,EAAMqH,EAAK3G,MACjBC,GAAIX,EAAMqH,EAAK1G,IACfC,KAAMyG,EAAKzG,UAIbmD,OAAOuD,OAAOtH,GAAOiE,KAAI,SAAC/B,GAAD,OACzB,kBAAC,EAAD,CACEmC,IAAKnC,EAAKf,GACVA,GAAIe,EAAKf,GACTU,EAAGK,EAAKL,EACRC,EAAGI,EAAKJ,EACRP,KAAMW,EAAKX,YCiCNgG,G,MAvDD,SAAC,GAAyB,IAAvB/E,EAAsB,EAAtBA,MAAOgF,EAAe,EAAfA,SAAe,EACXpH,mBAASoC,GADE,mBAC9BiF,EAD8B,KACvBC,EADuB,OAEbtH,oBAAUoC,EAAML,QAFH,mBAE9BY,EAF8B,KAExB4E,EAFwB,KAI/BC,EAAQC,sBAERC,EAAUC,uBAAY,WAC1BP,EAASC,GACTE,GAAQ,KACP,CAACF,EAAOD,IA2BX,OAbAhC,qBAAU,WAUR,OATIzC,GAAM6E,EAAMI,QAAQC,QAGpBlF,EACF6C,OAAOK,iBAAiB,QAAS6B,GAEjClC,OAAOM,oBAAoB,QAAS4B,GAG/B,kBAAMlC,OAAOM,oBAAoB,QAAS4B,MAChD,CAACA,EAAS/E,EAAM6E,IAGjB,2BACEM,IAAKN,EACLlF,UAAU,QACVyF,KAAK,OACLC,UAAWrF,EACXwB,QAAS,kBAAMoD,GAAS5E,IACxBP,MAAOiF,EACPD,SAAU,SAAC9B,GAAD,OAAOgC,EAAShC,EAAE2C,OAAO7F,QACnC8F,QA3BU,SAAC5C,GACC,UAAVA,EAAErB,IAAiByD,IACJ,WAAVpC,EAAErB,KATE,SAACqB,GACVA,GAAGA,EAAE6C,2BAETb,EAASlF,GACTmF,GAAQ,GAKqBa,Q,yBCVlBC,EAVM,SAAC,GAAD,IAAGlE,EAAH,EAAGA,QAAH,OACnB,0BAAM7B,UAAU,SAAS6B,QAAS,SAACmB,GAAQA,EAAEgD,kBAAmBnE,MAC9D,kBAAC,IAAD,CAAWX,UAAU,mBCMnB+E,EAAW,SAAC,GAEX,IADLxH,EACI,EADJA,GAAII,EACA,EADAA,KAAMM,EACN,EADMA,EAAGC,EACT,EADSA,EAAG8G,EACZ,EADYA,OAAQpC,EACpB,EADoBA,YAAaxB,EACjC,EADiCA,UACjC,EACoBoB,qBAAWvG,GAA3B2B,EADJ,EACIA,IAAKO,EADT,EACSA,OADT,EAGgC3B,mBAAS,CAAEyB,EAAG,EAAGC,EAAG,IAHpD,0BAGQ+G,EAHR,EAGKhH,EAAUiH,EAHf,EAGYhH,EAASiH,EAHrB,KAcIxD,EAAgBc,GATT,SAACC,GACd,IAAMM,EAAQC,KAAKC,MAAMR,EAAMxE,EAAIA,EAAGwE,EAAMzE,EAAIA,GAEhDkH,EAAQ,CACNlH,EAbS,GAaGgF,KAAKmC,IAAIpC,GACrB9E,EAdS,GAcG+E,KAAKoC,IAAIrC,QAIgB,GAAjCrB,YAQR,OACE,kBAAC,EAAD,CAAM7C,UAAW6D,IAAG,YAAa,CAAEqC,WAAW/G,EAAGA,EAAGC,EAAGA,GACrD,yBAAKoH,aAAc,kBAAM3D,GAAY,IAAO4D,aARhC,WACVP,GAEJrD,GAAY,KAMR,kBAAC,EAAD,CAAO/C,MAAOjB,EAAMiG,SAAU,SAAC4B,GAAD,OAASrH,EAAOZ,EAAIiI,MAClD,0BAAM1G,UAAU,OAAO2G,MAAO,CAAErC,UAAU,aAAD,OAAe6B,EAAf,eAAwBC,EAAxB,OAAkCtC,YAAa,SAACd,GAAD,OAAOc,EAAYd,EAAGvE,IAAK6D,UAAW,SAACU,GAAD,OAAOV,EAAUU,EAAGvE,MAClJ,kBAAC,EAAD,CAAcoD,QAAS,kBAAM/C,EAAIL,SAgBzCwH,EAAShG,aAAe,CACtBd,EAAG,EACHC,EAAG,EACH8G,QAAQ,GAIKD,QCzDTW,GAAW,SAAC,GAAwB,IAAtB5I,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAAW,EACXwF,qBAAWvG,GAA/BiB,EAD+B,EAC/BA,OAAQkB,EADuB,EACvBA,QAGVuH,GAAWC,MAAM5I,GAEvB,OACE,kBAAC,EAAD,CAAM8B,UAAU,YAAYhC,KAAMA,EAAMC,GAAIA,GACxC4I,EACA,6BACE,kBAAC,EAAD,CACEE,QAAQ,OACRjH,MAAO5B,EAAKU,WACZkG,SAAU,SAACkC,GAAD,OAAa1H,EAAQtB,EAAKS,GAAIR,EAAGQ,GAAIwI,WAAWD,OAE5D,kBAAC,EAAD,CAAcnF,QAAS,kBAAMzD,EAAOJ,EAAKS,GAAIR,EAAGQ,QAEhD,OAqBVmI,GAAS3G,aAAe,CACtB/B,KAAM,GAGO0I,UC1CA,cAAO,IAAD,EAGflD,qBAAWvG,GADbG,EAFiB,EAEjBA,MAAOC,EAFU,EAEVA,MAAOe,EAFG,EAEHA,IAAKP,EAFF,EAEEA,KAFF,EAaSL,mBAAS,MAblB,mBAaZwJ,EAbY,KAaJC,EAbI,OAeOzJ,mBAAS,CAAEyB,EAAG,EAAGC,EAAG,IAf3B,mBAeZwE,EAfY,KAeLwD,EAfK,KAgBXvE,EAAgBc,EAASyD,GAAU,GAAnCvE,YAEFwE,EAAY,SAACrE,EAAGhF,GACpBmJ,EAAUnJ,GACV6E,GAAY,IAGRyE,EAAU,SAACtE,EAAG/E,GAIlB,GAHA4E,GAAY,GACZsE,EAAU,MAEND,IAAWjJ,EAEf,IAAMF,EAAKmJ,EAAQjJ,EAAI,GAAM,MAAOyB,GAAOC,QAAQC,KAAK,iBAQ1D,OACE,kBAAC,EAAD,CAAOiC,QAjCU,SAACmB,GAClB1E,EAAI,KAAM,CACRa,EAAG6D,EAAEC,QAA8B,GAApBC,OAAOC,WACtB/D,EAAG4D,EAAEI,QAA+B,GAArBF,OAAOG,YACtBxE,KAAM,MA6BoByD,UANX,WACjBO,GAAY,GACZsE,EAAU,QAKN5J,EAAMgE,KAAI,SAACoD,GAAD,OACV,kBAAC,GAAD,CACEhD,IAAG,UAAKgD,EAAK3G,MAAV,OAAiB2G,EAAK1G,IACzBD,KAAMV,EAAMqH,EAAK3G,MACjBC,GAAIX,EAAMqH,EAAK1G,IACfC,KAAMyG,EAAKzG,UAIbgJ,EAAS,kBAAC,GAAD,CAAMvF,IAAI,QAAQ3D,KAAMV,EAAM4J,GAASjJ,GAAI2F,IAAY,KAEhEvC,OAAOuD,OAAOtH,GAAOiE,KAAI,SAAC/B,GAAD,OACzB,kBAAC,EAAD,CACEmC,IAAKnC,EAAKf,GACVA,GAAIe,EAAKf,GACTU,EAAGK,EAAKL,EACRC,EAAGI,EAAKJ,EACRP,KAAMW,EAAKX,KACXqH,OAAQ1G,EAAKf,KAAOyI,EACpBpD,YAAauD,EACb/E,UAAWgF,SC9DfC,GAAW,SAAC,GAAD,IACfpI,EADe,EACfA,EAAGC,EADY,EACZA,EAAGP,EADS,EACTA,KAAMqH,EADG,EACHA,OAAQrE,EADL,EACKA,QADL,OAGf,kBAAC,EAAD,CAAM7B,UAAW6D,IAAG,YAAa,CAAEqC,WAAW/G,EAAGA,EAAGC,EAAGA,GACrD,yBAAKyC,QAASA,GAAWhD,KAY7B0I,GAAStH,aAAe,CACtBd,EAAG,EACHC,EAAG,EACH8G,QAAQ,GAGKqB,UCtBTC,GAAW,SAAC,GAAD,IACfxJ,EADe,EACfA,KAAMC,EADS,EACTA,GAAIC,EADK,EACLA,KAAMuJ,EADD,EACCA,UADD,OAGf,kBAAC,EAAD,CAAMzH,UAAW6D,IAAG,YAAa,CAAE4D,cAAczJ,KAAMA,EAAMC,GAAIA,GAC/D,6BAAOC,KAWXsJ,GAASvH,aAAe,CACtB/B,KAAM,EACNuJ,WAAW,GAGED,UCjBA,cAAO,IAAD,EAGf9D,qBAAWvG,GADbG,EAFiB,EAEjBA,MAAOC,EAFU,EAEVA,MAAOM,EAFG,EAEHA,MAAO0B,EAFJ,EAEIA,KAFJ,EAKK7B,oBAAS,GALd,mBAKZkD,EALY,KAKNC,EALM,KAQb6G,EAAa7J,EAAM4B,OACrBkI,kBAAQ,CAAErK,QAAOC,SAASM,EAAMA,EAAM4B,OAAS,GAAI,QACnD,GAmBJ,OACE,kBAAC,EAAD,KACIlC,EAAMgE,KAAI,SAACoD,GAAD,OACV,kBAAC,GAAD,CACEhD,IAAG,UAAKgD,EAAK3G,MAAV,OAAiB2G,EAAK1G,IACzBD,KAAMV,EAAMqH,EAAK3G,MACjBC,GAAIX,EAAMqH,EAAK1G,IACfC,KAAMyG,EAAKzG,KACXuJ,UAAW7G,GAAQ8G,EAAWE,SAASjD,QAIzCtD,OAAOuD,OAAOtH,GAAOiE,KAAI,SAAC/B,GAAD,OACzB,kBAAC,GAAD,CACEmC,IAAKnC,EAAKf,GACVA,GAAIe,EAAKf,GACTU,EAAGK,EAAKL,EACRC,EAAGI,EAAKJ,EACRP,KAAMW,EAAKX,KACXqH,OAAQrI,EAAM+J,SAASpI,EAAKf,IAC5BoD,QAAS,kBApCJ,SAACrC,GACPoB,EAMM8G,EAAWG,MAAK,SAAClD,GAAD,OAAUA,EAAK1G,KAAOuB,KAAOD,EAAKC,GAEpDA,IAAS3B,EAAM,IAAM2B,IAAS3B,EAAMA,EAAM4B,OAAS,KACrC,IAAjB5B,EAAM4B,QAAcF,EAAK,MAE7BsB,GAAQ,IAVJhD,EAAM4B,OAAQF,EAAK,OAErBsB,GAAQ,GACRtB,EAAKC,IA+BYsI,CAAKtI,EAAKf,YClDpB,I,MAAA,WAAO,IAAD,EACaiF,qBAAWvG,GAAnCG,EADW,EACXA,MAAOC,EADI,EACJA,MAAOM,EADH,EACGA,MAEhBkK,EAAQC,mBAAS,CAAE1K,QAAOC,SAASM,GACnCK,EAAO+J,iBAAOF,GAEpB,OACE,2BAAO/H,UAAW6D,IAAG,SAAU,CAAEqE,QAAShK,EAAO,KAC/C,4BACE,oCACA,oCAEE6J,EAAMxG,KAAI,SAACoD,GAAD,MAAW,CACrB,wBAAIhD,IAAG,YAAOgD,EAAK3G,MAAZ,OAAmB2G,EAAK1G,KAC5BX,EAAMqH,EAAK3G,MAAMa,KACjB,IAFH,SAIG,IACAvB,EAAMqH,EAAK1G,IAAIY,MAElB,wBAAI8C,IAAG,YAAOgD,EAAK3G,MAAZ,OAAmB2G,EAAK1G,KAAO0G,EAAKzG,UAG7C,qCACA,4BAAMA,OCZRiK,GAAS,CAAC,OAAQ,OAAQ,QAE1BC,GAASC,MACTC,GAAUC,YAAcH,IAEf,cACb,IAAMI,EAAOtF,OAAOuF,SAASC,KAAKzJ,MAAM,GADrB,EAGKvB,mBACtByK,GAAOP,SAASY,GAAQA,EAVP,QAMA,mBAGZ9H,EAHY,KAGNC,EAHM,KAYnB,OACE,kBAAC,IAAD,CAAkB2H,QAASA,IACzB,yBAAKtI,UAAS,cAASU,IACrB,kBAAC,EAAD,6BACA,kBAAC,EAAD,CAAMA,KAAMA,EAAMC,QATJ,SAACgI,GACnBhI,EAAQgI,GACRL,GAAQM,SAAR,WAAqBD,OAQjB,kBAAC,GAAD,MAEA,kBAAC,IAAD,CAAQ3I,UAAU,UAChB,kBAAC,EAAD,CAAWwI,KAAK,UAChB,kBAAC,GAAD,CAAWA,KAAK,UAChB,kBAAC,GAAD,CAAWA,KAAK,UAEhB,kBAAC,IAAD,CAAUxK,KAAK,IAAIC,GAAE,WA9BV,QA8BgC4K,SAAO,EAACC,SAAO,QCrCpExK,cAAIjB,EAAO,IAAK,CAAEwB,KAAM,IAAKM,GAAI,IAAKC,EAAG,IACzCd,cAAIjB,EAAO,IAAK,CAAEwB,KAAM,IAAKM,GAAI,IAAKC,GAAI,MAC1Cd,cAAIjB,EAAO,IAAK,CAAEwB,KAAM,IAAKM,GAAI,IAAKC,EAAG,MACzCd,cAAIjB,EAAO,IAAK,CAAEwB,KAAM,IAAKM,EAAG,IAAKC,EAAG,IACxCd,cAAIjB,EAAO,IAAK,CAAEwB,KAAM,IAAKM,EAAG,IAAKC,GAAI,MACzCd,cAAIjB,EAAO,IAAK,CAAEwB,KAAM,IAAKM,EAAG,IAAKC,EAAG,MAExCrB,eAAKV,EAAO,IAAK,IAAK,GACtBU,eAAKV,EAAO,IAAK,IAAK,GACtBU,eAAKV,EAAO,IAAK,IAAK,IACtBU,eAAKV,EAAO,IAAK,IAAK,GACtBU,eAAKV,EAAO,IAAK,IAAK,GACtBU,eAAKV,EAAO,IAAK,IAAK,GACtBU,eAAKV,EAAO,IAAK,IAAK,GACtBU,eAAKV,EAAO,IAAK,IAAK,GACtBU,eAAKV,EAAO,IAAK,IAAK,GACtBU,eAAKV,EAAO,IAAK,IAAK,GAQtB0L,IAASC,OAAO,mBANH,kBACX,kBAAC,EAAD,KACE,kBAAC,GAAD,SAIY,MAAUC,SAASC,eAAe,W","file":"static/js/main.f7c2ad85.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as core from 'eko-ds-core';\n\nexport const GraphContext = createContext(null);\n\nexport const graph = {\n  nodes: {},\n  edges: [],\n};\n\nconst GraphProvider = ({ children }) => {\n  const [nodes, setNodes] = useState(graph.nodes);\n  const [edges, setEdges] = useState(graph.edges);\n  const [steps, setSteps] = useState([]);\n\n\n  const add = (nodeid, data) => {\n    const id = nodeid !== null\n      ? nodeid\n      : Date.now().toString(16);\n\n    core.add(graph, id, { id, name: id, ...data });\n    setNodes({ ...graph.nodes });\n  };\n\n  const del = (id) => {\n    core.del(graph, id);\n    setNodes({ ...graph.nodes });\n\n    const index = steps.indexOf(id);\n    if (index !== -1) setSteps(steps.slice(0, index));\n  };\n\n  const link = (from, to, cost) => {\n    core.link(graph, from, to, cost);\n    setEdges([...graph.edges]);\n  };\n\n  const unlink = (from, to) => {\n    core.unlink(graph, from, to);\n    setEdges([...graph.edges]);\n  };\n\n  const move = (id, x, y) => {\n    graph.nodes[id] = { ...graph.nodes[id], x, y };\n    setNodes({ ...graph.nodes });\n  };\n\n  const rename = (id, name) => {\n    graph.nodes[id] = { ...graph.nodes[id], name };\n    setNodes({ ...graph.nodes });\n  };\n\n  const valuate = (from, to, cost) => {\n    unlink(from, to);\n    link(from, to, cost);\n  };\n\n  // --------------------------------------\n\n  const step = (node) => {\n    if (node === null) {\n      setSteps([]);\n      return;\n    }\n\n    if (!steps.length) setSteps([node]);\n    else {\n      try {\n        core.edgeFor(graph, steps[steps.length - 1], node);\n        setSteps([...steps, node]);\n      } catch (err) { console.warn('already exists'); }\n    }\n  };\n\n  // --------------------------------------\n\n  const api = {\n    nodes,\n    add,\n    del,\n    move,\n    rename,\n    edges,\n    link,\n    unlink,\n    valuate,\n    steps,\n    step,\n  };\n\n  // --------------------------------------\n\n  return (\n    <GraphContext.Provider value={api}>\n      { children }\n    </GraphContext.Provider>\n  );\n};\n\nGraphProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default GraphProvider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nconst Title = ({ children }) => (\n  <h1 className=\"title\">{ children }</h1>\n);\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n\nTitle.defaultProps = {\n  children: [],\n};\n\nexport default Title;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './index.css';\n\n\nimport SpeedDial from '@material-ui/lab/SpeedDial';\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\n\nimport PanToolIcon from '@material-ui/icons/PanTool';\nimport CreateIcon from '@material-ui/icons/Create';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\nconst ACTIONS = {\n  move: {\n    icon: PanToolIcon,\n    name: 'Re-arrange the map',\n  },\n\n  edit: {\n    icon: CreateIcon,\n    name: 'Edit the map',\n  },\n\n  plan: {\n    icon: NavigationIcon,\n    name: 'Plan a route',\n  },\n};\n\nconst Dial = ({ mode, setMode }) => {\n  const [open, setOpen] = useState(false);\n\n  const Icon = ACTIONS[mode].icon;\n\n  const changeTo = (newMode) => {\n    setMode(newMode);\n    setOpen(false);\n  };\n\n  return (\n    <SpeedDial\n      className=\"dial\"\n      ariaLabel=\"speeddial\"\n      direction=\"up\"\n      icon={<Icon htmlColor=\"#fff\" />}\n      open={open}\n      onOpen={() => setOpen(true)}\n      onClose={() => setOpen(false)}\n    >\n      { Object.entries(ACTIONS).map(([routeName, action]) => (\n        <SpeedDialAction\n          key={action.name}\n          icon={<action.icon htmlColor={`var(--${routeName})`} />}\n          tooltipTitle={action.name}\n          onClick={() => changeTo(routeName)}\n        />\n      )) }\n    </SpeedDial>\n  );\n};\n\nDial.propTypes = {\n  mode: PropTypes.oneOf(['move', 'edit', 'plan']).isRequired,\n  setMode: PropTypes.func.isRequired,\n};\n\nexport default Dial;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Group = ({ children, ...props }) => (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  <svg overflow=\"visible\" {...props}>\n    { children }\n  </svg>\n);\n\nGroup.propTypes = {\n  children: PropTypes.node,\n};\n\nGroup.defaultProps = {\n  children: [],\n};\n\nexport default Group;\n","import React from 'react';\nimport './index.css';\n\nexport default () => (\n  <g className=\"cross\">\n    <line x1=\"0\" y1=\"-2\" x2=\"0\" y2=\"2\" />\n    <line x1=\"-2\" y1=\"0\" x2=\"2\" y2=\"0\" />\n  </g>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nimport Group from '../group';\nimport Cross from '../cross';\n\nconst Graph = ({ children, onClick, onMouseUp }) => (\n  <svg className=\"graph\">\n    <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" onClick={onClick} onMouseUp={onMouseUp} />\n\n    <Group x=\"50%\" y=\"50%\">\n      <Cross />\n      { children }\n    </Group>\n  </svg>\n);\n\nGraph.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  onMouseUp: PropTypes.func,\n};\n\nGraph.defaultProps = {\n  children: [],\n  onClick: null,\n  onMouseUp: null,\n};\n\nexport default Graph;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nimport Group from '../group';\n\nconst Node = ({\n  className, x, y, children,\n}) => (\n  <Group\n    className={className}\n    x={x}\n    y={y}\n  >\n    <foreignObject>\n      { children }\n    </foreignObject>\n  </Group>\n);\n\nNode.propTypes = {\n  className: PropTypes.string,\n  x: PropTypes.number,\n  y: PropTypes.number,\n  children: PropTypes.node,\n};\n\nNode.defaultProps = {\n  className: '',\n  x: 0,\n  y: 0,\n  children: [],\n};\n\nexport default Node;\n","import { useState, useEffect } from 'react';\n\nexport default (setXY, autoRelease = true) => {\n  const [dragging, setDragging] = useState(false);\n\n  useEffect(() => {\n    const mousemove = (e) => setXY({\n      x: e.clientX - window.innerWidth * 0.5,\n      y: e.clientY - window.innerHeight * 0.5,\n    });\n\n    const mouseup = () => {\n      if (autoRelease) setDragging(false);\n    };\n\n    if (dragging) {\n      window.addEventListener('mousemove', mousemove);\n      window.addEventListener('mouseup', mouseup);\n    } else {\n      window.removeEventListener('mousemove', mousemove);\n      window.removeEventListener('mouseup', mouseup);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', mousemove);\n      window.removeEventListener('mouseup', mouseup);\n    };\n  }, [autoRelease, dragging, setXY]);\n\n  return { dragging, setDragging };\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport Node from '../common/node/index';\n\nimport { GraphContext } from '../../contexts/graph';\nimport useMouse from '../../hooks/useMouse';\n\nconst MoveNode = ({\n  id, x, y, name,\n}) => {\n  const { move } = useContext(GraphContext);\n\n  const onMove = (mouse) => move(id, mouse.x, mouse.y);\n  const { dragging, setDragging } = useMouse(onMove);\n\n  return (\n    <Node className={cx('node move', { dragging })} x={x} y={y}>\n      <div onMouseDown={() => setDragging(true)}>{ name }</div>\n    </Node>\n  );\n};\n\nMoveNode.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number,\n  y: PropTypes.number,\n  name: PropTypes.string.isRequired,\n};\n\nMoveNode.defaultProps = {\n  x: 0,\n  y: 0,\n};\n\nexport default MoveNode;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport cx from 'classnames';\n\nimport { indexesOf } from 'eko-ds-core/libarray';\n\nimport { GraphContext } from '../../../contexts/graph';\n\nconst Edge = ({\n  className, from, to, children,\n}) => {\n  const { steps } = useContext(GraphContext);\n  const selected = indexesOf([from.id, to.id], steps).length > 0;\n\n  const x = (from.x + to.x) * 0.5;\n  const y = (from.y + to.y) * 0.5;\n\n  const angle = Math.atan2(to.y - from.y, to.x - from.x) * (180 / Math.PI);\n\n  return (\n    <g className={cx(className, { selected })} transform={`translate(${x} ${y})`}>\n      <line\n        x1={from.x - x}\n        x2={to.x - x}\n        y1={from.y - y}\n        y2={to.y - y}\n      />\n\n      <g transform={`translate(${to.x - x} ${to.y - y})`}>\n        <polygon points=\"-30,-5 -20,0 -30,5\" transform={`rotate(${angle})`} />\n      </g>\n\n      <foreignObject>\n        { children }\n      </foreignObject>\n    </g>\n  );\n};\n\nEdge.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node,\n\n  from: PropTypes.shape({\n    id: PropTypes.string,\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }).isRequired,\n\n  to: PropTypes.shape({\n    id: PropTypes.string,\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }).isRequired,\n};\n\nEdge.defaultProps = {\n  className: '',\n  children: [],\n};\n\nexport default Edge;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport Edge from '../common/edge/index';\n\nimport { GraphContext } from '../../contexts/graph';\nimport useMouse from '../../hooks/useMouse';\n\nconst MoveEdge = ({ from, to, cost }) => {\n  const { move } = useContext(GraphContext);\n\n  const dx = (to.x - from.x) * 0.5;\n  const dy = (to.y - from.y) * 0.5;\n\n  const onMove = ({ x, y }) => {\n    move(from.id, x - dx, y - dy);\n    move(to.id, x + dx, y + dy);\n  };\n\n  const { dragging, setDragging } = useMouse(onMove);\n\n  return (\n    <Edge className={cx('edge move', { dragging })} from={from} to={to}>\n      { cost ? <div onMouseDown={() => setDragging(true)}>{ cost }</div> : null}\n    </Edge>\n  );\n};\n\nMoveEdge.propTypes = {\n  from: PropTypes.shape({\n    id: PropTypes.string,\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }).isRequired,\n\n  to: PropTypes.shape({\n    id: PropTypes.string,\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }).isRequired,\n\n  cost: PropTypes.number,\n};\n\nMoveEdge.defaultProps = {\n  cost: 0,\n};\n\nexport default MoveEdge;\n","import React, { useContext } from 'react';\n\nimport { GraphContext } from '../../contexts/graph';\n\nimport Graph from '../common/graph/index';\nimport Node from './node';\nimport Edge from './edge';\n\nexport default () => {\n  const { nodes, edges } = useContext(GraphContext);\n\n  return (\n    <Graph>\n      { edges.map((edge) => (\n        <Edge\n          key={`${edge.from}${edge.to}`}\n          from={nodes[edge.from]}\n          to={nodes[edge.to]}\n          cost={edge.cost}\n        />\n      )) }\n\n      { Object.values(nodes).map((node) => (\n        <Node\n          key={node.id}\n          id={node.id}\n          x={node.x}\n          y={node.y}\n          name={node.name}\n        />\n      )) }\n    </Graph>\n  );\n};\n","import React, {\n  createRef, useCallback, useEffect, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nconst Input = ({ value, onChange }) => {\n  const [draft, setDraft] = useState(value);\n  const [edit, setEdit] = useState(!value.length);\n\n  const input = createRef();\n\n  const confirm = useCallback(() => {\n    onChange(draft);\n    setEdit(false);\n  }, [draft, onChange]);\n\n  const cancel = (e) => {\n    if (e) e.stopImmediatePropagation();\n\n    setDraft(value);\n    setEdit(false);\n  };\n\n  const onKey = (e) => {\n    if (e.key === 'Enter') confirm();\n    else if (e.key === 'Escape') cancel();\n  };\n\n  useEffect(() => {\n    if (edit) input.current.focus();\n\n    // cancel clicker\n    if (edit) {\n      window.addEventListener('click', confirm);\n    } else {\n      window.removeEventListener('click', confirm);\n    }\n\n    return () => window.removeEventListener('click', confirm);\n  }, [confirm, edit, input]);\n\n  return (\n    <input\n      ref={input}\n      className=\"input\"\n      type=\"text\"\n      readOnly={!edit}\n      onClick={() => setEdit(!edit)}\n      value={draft}\n      onChange={(e) => setDraft(e.target.value)}\n      onKeyUp={onKey}\n    />\n  );\n};\n\nInput.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nimport ClearIcon from '@material-ui/icons/Clear';\n\nconst DeleteButton = ({ onClick }) => (\n  <span className=\"delete\" onClick={(e) => { e.stopPropagation(); onClick(); }}>\n    <ClearIcon htmlColor=\"currentColor\" />\n  </span>\n);\n\nDeleteButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default DeleteButton;\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\n\nimport { GraphContext } from '../../contexts/graph';\nimport useMouse from '../../hooks/useMouse';\n\nimport Node from '../common/node/index';\nimport Input from '../common/input';\nimport DeleteButton from '../common/delete';\n\nconst LENGTH = 20;\n\nconst EditNode = ({\n  id, name, x, y, active, onMouseDown, onMouseUp,\n}) => {\n  const { del, rename } = useContext(GraphContext);\n\n  const [{ x: hx, y: hy }, setHook] = useState({ x: 0, y: 0 });\n\n  const onMove = (mouse) => {\n    const angle = Math.atan2(mouse.y - y, mouse.x - x);\n\n    setHook({\n      x: LENGTH * Math.cos(angle),\n      y: LENGTH * Math.sin(angle),\n    });\n  };\n\n  const { setDragging } = useMouse(onMove, false);\n\n  const onLeave = () => {\n    if (active) return;\n\n    setDragging(false);\n  };\n\n  return (\n    <Node className={cx('node edit', { active })} x={x} y={y}>\n      <div onMouseEnter={() => setDragging(true)} onMouseLeave={onLeave}>\n        <Input value={name} onChange={(val) => rename(id, val)} />\n        <span className=\"hook\" style={{ transform: `translate(${hx}px, ${hy}px` }} onMouseDown={(e) => onMouseDown(e, id)} onMouseUp={(e) => onMouseUp(e, id)} />\n        <DeleteButton onClick={() => del(id)} />\n      </div>\n    </Node>\n  );\n};\n\nEditNode.propTypes = {\n  id: PropTypes.string.isRequired,\n  x: PropTypes.number,\n  y: PropTypes.number,\n  name: PropTypes.string.isRequired,\n  active: PropTypes.bool,\n  onMouseDown: PropTypes.func.isRequired,\n  onMouseUp: PropTypes.func.isRequired,\n};\n\nEditNode.defaultProps = {\n  x: 0,\n  y: 0,\n  active: false,\n\n};\n\nexport default EditNode;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { GraphContext } from '../../contexts/graph';\n\nimport Edge from '../common/edge';\nimport Input from '../common/input';\nimport DeleteButton from '../common/delete';\n\nconst EditEdge = ({ from, to, cost }) => {\n  const { unlink, valuate } = useContext(GraphContext);\n\n  // eslint-disable-next-line no-restricted-globals\n  const hasCost = !isNaN(cost);\n\n  return (\n    <Edge className=\"edge edit\" from={from} to={to}>\n      { hasCost ? (\n        <div>\n          <Input\n            pattern=\"\\d+\"\n            value={cost.toString()}\n            onChange={(newCost) => valuate(from.id, to.id, parseFloat(newCost))}\n          />\n          <DeleteButton onClick={() => unlink(from.id, to.id)} />\n        </div>\n      ) : null }\n    </Edge>\n  );\n};\n\nEditEdge.propTypes = {\n  from: PropTypes.shape({\n    id: PropTypes.string,\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }).isRequired,\n\n  to: PropTypes.shape({\n    id: PropTypes.string,\n    x: PropTypes.number,\n    y: PropTypes.number,\n  }).isRequired,\n\n  cost: PropTypes.number,\n};\n\nEditEdge.defaultProps = {\n  cost: 0,\n};\n\nexport default EditEdge;\n","import React, { useContext, useState } from 'react';\n\nimport { GraphContext } from '../../contexts/graph';\nimport useMouse from '../../hooks/useMouse';\n\nimport Graph from '../common/graph/index';\nimport Node from './node';\nimport Edge from './edge';\n\nexport default () => {\n  const {\n    nodes, edges, add, link,\n  } = useContext(GraphContext);\n\n  const createNode = (e) => {\n    add(null, {\n      x: e.clientX - window.innerWidth * 0.5,\n      y: e.clientY - window.innerHeight * 0.5,\n      name: '',\n    });\n  };\n\n  const [anchor, setAnchor] = useState(null);\n\n  const [mouse, setMouse] = useState({ x: 0, y: 0 });\n  const { setDragging } = useMouse(setMouse, false);\n\n  const startEdge = (e, from) => {\n    setAnchor(from);\n    setDragging(true);\n  };\n\n  const endEdge = (e, to) => {\n    setDragging(false);\n    setAnchor(null);\n\n    if (anchor === to) return;\n\n    try { link(anchor, to, 0); } catch (err) { console.warn('broken edge'); }\n  };\n\n  const cancelEdge = () => {\n    setDragging(false);\n    setAnchor(null);\n  };\n\n  return (\n    <Graph onClick={createNode} onMouseUp={cancelEdge}>\n      { edges.map((edge) => (\n        <Edge\n          key={`${edge.from}${edge.to}`}\n          from={nodes[edge.from]}\n          to={nodes[edge.to]}\n          cost={edge.cost}\n        />\n      )) }\n\n      { anchor ? <Edge key=\"draft\" from={nodes[anchor]} to={mouse} /> : null}\n\n      { Object.values(nodes).map((node) => (\n        <Node\n          key={node.id}\n          id={node.id}\n          x={node.x}\n          y={node.y}\n          name={node.name}\n          active={node.id === anchor}\n          onMouseDown={startEdge}\n          onMouseUp={endEdge}\n        />\n      )) }\n    </Graph>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport Node from '../common/node/index';\n\nconst PlanNode = ({\n  x, y, name, active, onClick,\n}) => (\n  <Node className={cx('node plan', { active })} x={x} y={y}>\n    <div onClick={onClick}>{ name }</div>\n  </Node>\n);\n\nPlanNode.propTypes = {\n  x: PropTypes.number,\n  y: PropTypes.number,\n  name: PropTypes.string.isRequired,\n  active: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\n\nPlanNode.defaultProps = {\n  x: 0,\n  y: 0,\n  active: false,\n};\n\nexport default PlanNode;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\n\nimport Edge from '../common/edge/index';\n\nconst PlanEdge = ({\n  from, to, cost, highlight,\n}) => (\n  <Edge className={cx('edge plan', { highlight })} from={from} to={to}>\n    <div>{ cost }</div>\n  </Edge>\n);\n\nPlanEdge.propTypes = {\n  from: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n  cost: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  highlight: PropTypes.bool,\n};\n\nPlanEdge.defaultProps = {\n  cost: 0,\n  highlight: false,\n};\n\nexport default PlanEdge;\n","import React, { useContext, useState } from 'react';\nimport { edgesOf } from 'eko-ds-core';\n\nimport { GraphContext } from '../../contexts/graph';\n\nimport Graph from '../common/graph/index';\nimport Node from './node';\nimport Edge from './edge';\n\nexport default () => {\n  const {\n    nodes, edges, steps, step,\n  } = useContext(GraphContext);\n\n  const [open, setOpen] = useState(false);\n\n  // open paths\n  const directions = steps.length\n    ? edgesOf({ nodes, edges }, steps[steps.length - 1], 'from')\n    : [];\n\n  // action\n  const push = (node) => {\n    if (!open) {\n      if (steps.length) step(null);\n      else {\n        setOpen(true);\n        step(node);\n      }\n    } else if (directions.find((edge) => edge.to === node)) step(node);\n\n    else if (node === steps[0] || node === steps[steps.length - 1]) {\n      if (steps.length === 1) step(null);\n\n      setOpen(false);\n    }\n  };\n\n  return (\n    <Graph>\n      { edges.map((edge) => (\n        <Edge\n          key={`${edge.from}${edge.to}`}\n          from={nodes[edge.from]}\n          to={nodes[edge.to]}\n          cost={edge.cost}\n          highlight={open && directions.includes(edge)}\n        />\n      )) }\n\n      { Object.values(nodes).map((node) => (\n        <Node\n          key={node.id}\n          id={node.id}\n          x={node.x}\n          y={node.y}\n          name={node.name}\n          active={steps.includes(node.id)}\n          onClick={() => push(node.id)}\n        />\n      )) }\n    </Graph>\n  );\n};\n","import React, { useContext } from 'react';\nimport './style.css';\nimport cx from 'classnames';\n\nimport { routeFor, costOf } from 'eko-ds-core';\n\nimport { GraphContext } from '../../../contexts/graph';\n\nexport default () => {\n  const { nodes, edges, steps } = useContext(GraphContext);\n\n  const route = routeFor({ nodes, edges }, steps);\n  const cost = costOf(route);\n\n  return (\n    <aside className={cx('report', { visible: cost > 0 })}>\n      <dl>\n        <dt>Edge</dt>\n        <dd>Cost</dd>\n\n        { route.map((edge) => ([\n          <dt key={`dt${edge.from}${edge.to}`}>\n            {nodes[edge.from].name}\n            {' '}\n→\n            {' '}\n            {nodes[edge.to].name}\n          </dt>,\n          <dd key={`dd${edge.from}${edge.to}`}>{edge.cost}</dd>,\n        ])) }\n\n        <dt>Total</dt>\n        <dd>{ cost }</dd>\n      </dl>\n    </aside>\n  );\n};\n","import React, { useState } from 'react';\nimport './index.css';\n\nimport {\n  createHistory,\n  LocationProvider,\n  Router, Redirect,\n} from '@reach/router';\nimport createHashSource from 'hash-source';\n\nimport Title from '../components/common/title';\nimport Dial from '../components/common/dial';\n\nimport MoveGraph from '../components/move/graph';\nimport EditGraph from '../components/edit/graph';\nimport PlanGraph from '../components/plan/graph';\n\nimport Report from '../components/common/report';\n\nconst defaultRoute = 'move';\nconst routes = ['move', 'edit', 'plan'];\n\nconst source = createHashSource();\nconst history = createHistory(source)\n\nexport default () => {\n  const path = window.location.hash.slice(1);\n\n  const [mode, setMode] = useState(\n    routes.includes(path) ? path : defaultRoute,\n  );\n\n  const changeRoute = (newMode) => {\n    setMode(newMode);\n    history.navigate(`/${newMode}`)\n  };\n\n  return (\n    <LocationProvider history={history}>\n      <div className={`app ${mode}`}>\n        <Title>Eko Delivery Service</Title>\n        <Dial mode={mode} setMode={changeRoute} />\n        <Report />\n\n        <Router className=\"router\">\n          <MoveGraph path=\"/move\" />\n          <EditGraph path=\"/edit\" />\n          <PlanGraph path=\"/plan\" />\n\n          <Redirect from=\"/\" to={`/${defaultRoute}`} default noThrow />\n        </Router>\n      </div>\n    </LocationProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport { add, link } from 'eko-ds-core';\nimport GraphProvider, { graph } from './contexts/graph';\n\n\nimport App from './app';\n\n// mock data\nadd(graph, 'A', { name: 'A', x: -100, y: 0 });\nadd(graph, 'B', { name: 'B', x: -100, y: -200 });\nadd(graph, 'C', { name: 'C', x: -100, y: 200 });\nadd(graph, 'D', { name: 'D', x: 100, y: 0 });\nadd(graph, 'E', { name: 'E', x: 100, y: -200 });\nadd(graph, 'F', { name: 'F', x: 100, y: 200 });\n\nlink(graph, 'A', 'B', 1);\nlink(graph, 'A', 'C', 4);\nlink(graph, 'A', 'D', 10);\nlink(graph, 'B', 'E', 3);\nlink(graph, 'C', 'D', 4);\nlink(graph, 'C', 'F', 2);\nlink(graph, 'D', 'E', 1);\nlink(graph, 'E', 'A', 2);\nlink(graph, 'E', 'B', 3);\nlink(graph, 'F', 'D', 1);\n\nconst Main = () => (\n  <GraphProvider>\n    <App />\n  </GraphProvider>\n);\n\nReactDOM.render(<Main />, document.getElementById('root'));\n"],"sourceRoot":""}